#!/usr/bin/env python3

import os
import sys
import socket
import subprocess

from pythonosc import udp_client
from lib.util import pressed, current_colours, clear_all

pad_socket_path = "/tmp/launchpad.socket"


def connect(socket_path):
    try:
        os.unlink(socket_path)

    except OSError:
        if os.path.exists(socket_path):
            raise

    srv = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
    srv.bind(socket_path)
    srv.listen(1)

    con, adr = srv.accept()
    current_colours(con)
    return srv, con


if __name__ == '__main__':
    ip = None
    port = 7001

    if len(sys.argv) == 1:
        print("Supply IP and port [7001 default]")
        sys.exit(1)

    if len(sys.argv) == 2:
        ip = sys.argv[1]

    if len(sys.argv) == 3:
        ip = sys.argv[1]
        port = sys.argv[2]

    osc = udp_client.SimpleUDPClient(ip, int(port))
    srv, con = connect(pad_socket_path)

    try:
        while True:
            try:
                data = con.recv(len("00N"))

                if len(data) == 0:
                    raise BrokenPipeError

                d = data.decode()

                y = d[0]
                x = d[1]
                p = False

                if d[2] == 'P':
                    p = True

                pressed(osc, con, x, y, p)


            except BrokenPipeError as e:
                con.close()
                os.unlink(pad_socket_path)
                srv.close()

                srv, con = connect(pad_socket_path)
                continue

    finally:
        con.close()
        os.unlink(pad_socket_path)
        srv.close()
